name: ci
env:
  TERM: xterm # Makes tput work in actions output

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request: # Run CI for PRs on any branch
  merge_group:

jobs:
  ci-format:
    strategy:
      matrix:
        os: [ubuntu-20.04]
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: false # LVGL makefile manually installs the submodule
      - uses: fiam/arm-none-eabi-gcc@v1
        with:
          release: '10-2020-q4' # The arm-none-eabi-gcc release to use.
      - name: setup-riscv-toolchain
        run: |
          RISCV_TOOLCHAIN_MIRRORS=(\
            "http://www.cs.virginia.edu/~bjc8c/archive/gcc-riscv64-unknown-elf-8.3.0-ubuntu.zip" \
            "https://alpha.mirror.svc.schuermann.io/files/2023-08-17_gcc-riscv64-unknown-elf-8.3.0-ubuntu.zip"\
          )
          pushd $HOME
          for MIRROR in ${RISCV_TOOLCHAIN_MIRRORS[@]}; do
            echo "Fetching RISC-V toolchain from ${MIRROR}..."
            wget -Oriscv-toolchain.zip -q "$MIRROR" &&\
              (echo "2c82a8f3ac77bf2b24d66abff3aa5e873750c76de24c77e12dae91b9d2f4da27 riscv-toolchain.zip" |\
                sha256sum -c)
            if [ $? -ne 0 ]; then
              echo "WARNING: Fetching RISC-V from mirror $MIRROR failed!" >&2
            else
              break
            fi
          done
          unzip riscv-toolchain.zip
          echo "$HOME/gcc-riscv64-unknown-elf-8.3.0-ubuntu/bin" >> $GITHUB_PATH
          popd
      - name: ci-format
        run: pushd examples; ./format_all.sh || exit; popd

  ci-build:
    strategy:
      matrix:
        os: [ubuntu-20.04]
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: fiam/arm-none-eabi-gcc@v1
        with:
          release: '10-2020-q4' # The arm-none-eabi-gcc release to use.
      - name: setup-riscv-toolchain
        run: |
          RISCV_TOOLCHAIN_MIRRORS=(\
            "http://www.cs.virginia.edu/~bjc8c/archive/gcc-riscv64-unknown-elf-8.3.0-ubuntu.zip" \
            "https://alpha.mirror.svc.schuermann.io/files/2023-08-17_gcc-riscv64-unknown-elf-8.3.0-ubuntu.zip"\
          )
          pushd $HOME
          for MIRROR in ${RISCV_TOOLCHAIN_MIRRORS[@]}; do
            echo "Fetching RISC-V toolchain from ${MIRROR}..."
            wget -Oriscv-toolchain.zip -q "$MIRROR" &&\
              (echo "2c82a8f3ac77bf2b24d66abff3aa5e873750c76de24c77e12dae91b9d2f4da27 riscv-toolchain.zip" |\
                sha256sum -c)
            if [ $? -ne 0 ]; then
              echo "WARNING: Fetching RISC-V from mirror $MIRROR failed!" >&2
            else
              break
            fi
          done
          unzip riscv-toolchain.zip
          echo "$HOME/gcc-riscv64-unknown-elf-8.3.0-ubuntu/bin" >> $GITHUB_PATH
          popd
      - name: ci-build
        run: pushd examples; RISCV=1 ./build_all.sh || exit; popd
      - name: ci-debug-build
        run: pushd examples/blink; make debug RAM_START=0x20004000 FLASH_INIT=0x30051 || exit; popd
